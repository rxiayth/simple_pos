1. figure out how to do borders nicely
2. is there a way to force certain props to be passed down?
3. convert layout css back onto css file.
    note :
    // This couples your component to the layout system
    // It reduces the reusability of your component
    <UserBadge
     className="col-xs-12 col-sm-6 col-md-8"
     firstName="Michael"
     lastName="Chan" />

    // This is much easier to maintain and change
    <div class="col-xs-12 col-sm-6 col-md-8">
      <UserBadge
       firstName="Michael"
       lastName="Chan" />
    </div>
    For layout support, I often try to design components to be 100% width and height.

    source : https://stackoverflow.com/questions/26882177/react-js-inline-style-best-practices
4. why's 100% 100% needed?
5. figureout deep copy

david
9. database 									DONE
	- use JSON format
	- create drinks with fixed values
	- create inventory with fixed values

12. convert var into let and const & doc		80%
5. plus +/- button on cartitem					25%
1. change functions so that it is only used in immediate child.  0%
3. disable the button when maxed				0%
11. convert internal functions to _blahblah		0%

-- eric
2. create ?? folder
    button.js

7. generalize funcs in components

10. css
    mouse hover, onclick color change etc
    show option on mouse hover

-- nxt week

12. funcs commented, parameter, return value set

13. show info
14. add pictures
15. confirmation on purchase (not pop up)
16. ??

login page.
database - add user name/pass
